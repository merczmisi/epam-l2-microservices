name: Build/test/Publish

on:
  [push]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'maven'
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: micro-services
        path: |
          ./micro-collector/target/micro-collector-1.0-SNAPSHOT.jar
          ./micro-sender/target/micro-sender-1.0-SNAPSHOT.jar
          ./micro-recipient/target/micro-recipient-1.0-SNAPSHOT.jar
    
  docker:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: micro-services
      - name: Move folders
        run: ls
        shell: bash
      
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Run Buildx docker and push
        run: |
          cd micro-collector
          docker buildx build \
            -t "ghcr.io/merczmisi/epam-l2-microservices/micro-collector:latest" \
            -f ./Dockerfile \
            --push .
            
          cd ..
          cd micro-sender
          docker buildx build \
            -t "ghcr.io/merczmisi/epam-l2-microservices/micro-sender:latest" \
            -f ./Dockerfile \
            --push .
          
          cd ..
          cd micro-recipient
          docker buildx build \
            -t "ghcr.io/merczmisi/epam-l2-microservices/micro-recipient:latest" \
            -f ./Dockerfile \
            --push .
            
  deploy:
    name: Deploy
    if: github.ref == 'refs/heads/master'
    needs: [docker]
    runs-on: ubuntu-22.04
    steps:
      - name: Set the Kubernetes context
        uses: Azure/k8s-set-context@v3
        with:
          method: service-account
          k8s-url: https://e32ce55e-9d72-4243-abe7-11f59dd66cd5.vultr-k8s.com:6443
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}
          
      - name: Checkout source code
        uses: actions/checkout@v3
        
      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v4
        with:
          namespace: sg9
          images: |
            ghcr.io/merczmisi/epam-l2-microservices/micro-collector:latest
            ghcr.io/merczmisi/epam-l2-microservices/micro-sender:latest
            ghcr.io/merczmisi/epam-l2-microservices/micro-recipient:latest
      
